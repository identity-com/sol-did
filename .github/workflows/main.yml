name: CI
on: [push, pull_request]
jobs:
  build-driver:
    name: Build, lint, and test the driver on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['15.x']
        os: [ubuntu-latest]

    defaults:
      run:
        working-directory: ./driver

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test --ci --coverage --maxWorkers=2

      - name: Build
        run: yarn build
  build-client:
    name: Build, lint, and test the solid client on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['15.x']
        os: [ubuntu-latest]

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test --ci --coverage --maxWorkers=2

      - name: Build
        run: yarn build
  program-lint:
    name: Run rustfmt and clippy on the solid on-chain program on Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['nightly-2021-02-18']
        os: [ubuntu-latest]

    env:
      working-directory: ./program

    defaults:
      run:
        working-directory: ./program

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Run fmt
        uses: actions-rs/cargo@v1
        working-directory: ${{ env.working-directory }}
        with:
          command: fmt
          args: --all -- --check

      - name: Cache dependencies
        uses: actions/cache@v2
        working-directory: ${{ env.working-directory }}
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-clippy-${{ hashFiles('Cargo.lock') }}

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        working-directory: ${{ env.working-directory }}
        with:
          command: clippy
          args: -Zunstable-options --workspace --all-targets -- --deny=warnings
