name: Program
on:
  push:
    paths:
    - 'sol-did'
  pull_request:
jobs:
  program-lint:
    name: Format, lint and test the sol on-chain program on Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.61']
        solana: ['v1.13.5']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path sol-did/Cargo.toml --all -- --check

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./sol-did/target
          key: cargo-clippy-${{ hashFiles('sol-did/Cargo.lock') }}

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./sol-did/node_modules
          key: yarn-client-${{ hashFiles('sol-did/yarn.lock') }}

      - name: Install & Build program
        run: | 
          cd sol-did
          yarn install --ignore-scripts --frozen-lockfile
          yarn anchor build

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path sol-did/Cargo.toml --tests --workspace --all-targets -- --deny=warnings

      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path sol-did/Cargo.toml

  program-unit-test:
    name: Unit test program on Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.61']
        solana: ['v1.13.5']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./sol-did/target
          key: cargo-test-${{ hashFiles('sol-did/Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./sol-did/node_modules
          key: yarn-client-${{ hashFiles('sol-did/yarn.lock') }}

      - name: Install & Build program
        run: |
          cd sol-did
          yarn install --ignore-scripts --frozen-lockfile
          yarn anchor build

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path sol-did/Cargo.toml

  anchor-e2e-test:
    name: Build, Lint Client and test the sol on-chain program on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }}, node ${{ matrix.node }}, and ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./sol-did

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [ '16.x' ]
        rust: ['stable']
        solana: ['v1.13.5']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./sol-did/target
          key: cargo-build-${{ hashFiles('sol-did/Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./sol-did/node_modules
          key: yarn-client-${{ hashFiles('sol-did/yarn.lock') }}

      - name: Install
        run: yarn install --ignore-scripts --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build program and run integration tests
        run: |
          yarn build
          yarn anchor test

      - name: Archive program artifacts
        uses: actions/upload-artifact@v3
        with:
          name: latest-sol-did-program
          path: sol-did/target/deploy/sol_did.so


  E2E:
    name: Test the sol:did cli against the on-chain program on Solana ${{ matrix.solana }}, Node ${{ matrix.node }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}
    needs: anchor-e2e-test

    defaults:
      run:
        working-directory: ./sol-did

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest]
        solana: ['v1.13.5']
        rust: ['stable']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./sol-did/target
          key: cargo-build-${{ hashFiles('sol-did/Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./sol-did/node_modules
          key: yarn-client-${{ hashFiles('sol-did/yarn.lock') }}

      - name: Install
        run: yarn install --ignore-scripts --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: latest-sol-did-program
          path: sol-did/target/deploy/sol_did.so

      - name: Test e2e
        run: yarn test-e2e
        working-directory: ./sol-did/client/packages/cli

      - name: Output logs
        if: failure()
        run: cat ./test-ledger/validator.log
        working-directory: ./sol-did/client/packages/cli
